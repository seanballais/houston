{"version":3,"sources":["../src/lib/server/controller.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;;;;;;;;;AAEH,yCAAsC;AAEtC,qCAAoC;AAKpC,IAAsB,UAAU,GAAhC;IADA;QAGE;;;;WAIG;QACO,WAAM,GAAG,GAAG,CAAA;IAgDxB,CAAC;IAvCC;;;;OAIG;IACI,WAAW;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAA;QAEF,OAAO,IAAI,CAAA;IACb,CAAC;IAED;;;;OAIG;IACI,WAAW;QACf,OAAO,IAAI,CAAA;IACd,CAAC;IAED;;;;;OAKG;IACH,kCAAkC;IAC3B,UAAU;QACf,IAAI;aACD,WAAW,EAAE;aACb,WAAW,EAAE,CAAA;QAEhB,OAAO,CAAO,GAAG,EAAE,IAAI,EAAE,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;YAC/B,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;QACzC,CAAC,CAAA,CAAA;IACH,CAAC;CACF,CAAA;AAvDqB,UAAU;IAD/B,sBAAU,EAAE;GACS,UAAU,CAuD/B;AAvDqB,gCAAU","file":"controller.js","sourcesContent":["/**\n * houston/src/lib/server/controller.ts\n * A basic interface for a server controller.\n */\n\nimport { injectable } from 'inversify'\nimport { Context } from 'koa'\nimport * as Router from 'koa-router'\n\nimport { IMiddleware } from 'koa-router'\n\n@injectable()\nexport abstract class Controller {\n\n  /**\n   * The prefix for the controller.\n   *\n   * @var {String}\n   */\n  protected prefix = '/'\n\n  /**\n   * The koa-router instance we will use\n   *\n   * @var {Router}\n   */\n  protected router: Router\n\n  /**\n   * Sets up the basic router with prefixes and needed settings.\n   *\n   * @return {Controller}\n   */\n  public setupRouter () {\n    this.router = new Router({\n      prefix: this.prefix\n    })\n\n    return this\n  }\n\n  /**\n   * Sets up all of the given routes with the router.\n   *\n   * @return {Controller}\n   */\n  public setupRoutes () {\n     return this\n  }\n\n  /**\n   * Returns a list of middleware / routes to run.\n   *\n   * @async\n   * @return {IMiddleware}\n   */\n  // tslint:disable-next-line no-any\n  public middleware (): (ctx: Context, next: () => Promise<any>) => Promise<void> {\n    this\n      .setupRouter()\n      .setupRoutes()\n\n    return async (ctx, next) => {\n      this.router.routes()(ctx, null)\n      this.router.allowedMethods()(ctx, null)\n    }\n  }\n}\n"]}