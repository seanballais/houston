{"version":3,"sources":["../src/lib/app.ts"],"names":[],"mappings":";AAAA;;;;GAIG;;AAEH,yCAAsD;AAEtD,qCAAiC;AAEjC;;;GAGG;AACH,SAAiB,SAAQ,qBAAS;IAgBhC;;;;OAIG;IACH,YAAoB,MAAc;QAChC,KAAK,EAAE,CAAA;QAEP,IAAI,CAAC,IAAI,CAAS,eAAM,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAA;QAEjD,IAAI,CAAC,cAAc,EAAE,CAAA;IACvB,CAAC;IAED;;;;OAIG;IACI,cAAc;QACnB,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,CAAA;IAC7B,CAAC;;AAlCD;;;;GAIG;AACc,aAAS,GAAsB;IAC9C,OAAO,CAAC,kBAAkB,CAAC,CAAC,QAAQ;IACpC,OAAO,CAAC,qBAAqB,CAAC,CAAC,QAAQ;IACvC,OAAO,CAAC,gBAAgB,CAAC,CAAC,QAAQ;IAClC,OAAO,CAAC,kBAAkB,CAAC,CAAC,QAAQ;IACpC,OAAO,CAAC,mBAAmB,CAAC,CAAC,QAAQ;IACrC,OAAO,CAAC,0BAA0B,CAAC,CAAC,QAAQ;CAC7C,CAAA;AAdH,kBAqCC","file":"app.js","sourcesContent":["/**\n * houston/src/lib/app.ts\n * IOC container for houston. This is the entrypoint to anything and everything\n * sweat in life.\n */\n\nimport { Container, ContainerModule } from 'inversify'\n\nimport { Config } from './config'\n\n/**\n * App\n * A houston IOC container\n */\nexport class App extends Container {\n\n  /**\n   * A list of all the providers to load in the application.\n   *\n   * @var {ContainerModule[]}\n   */\n  protected static providers: ContainerModule[] = [\n    require('../repo/provider').provider,\n    require('./database/provider').provider,\n    require('./log/provider').provider,\n    require('./queue/provider').provider,\n    require('./server/provider').provider,\n    require('./utility/faker/provider').provider\n  ]\n\n  /**\n   * Creates a new App\n   *\n   * @param {Config} config\n   */\n  public constructor (config: Config) {\n    super()\n\n    this.bind<Config>(Config).toConstantValue(config)\n\n    this.setupProviders()\n  }\n\n  /**\n   * Sets up all of the providers we have throughout the application.\n   *\n   * @return {void}\n   */\n  public setupProviders () {\n    this.load(...App.providers)\n  }\n}\n"]}