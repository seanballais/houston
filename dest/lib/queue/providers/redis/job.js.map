{"version":3,"sources":["../src/lib/queue/providers/redis/job.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;;;AAGH,mCAAqC;AAIrC,SAAiB,SAAQ,qBAAY;IASnC;;;;OAIG;IACH,YAAa,GAAiB;QAC5B,KAAK,EAAE,CAAA;QAEP,IAAI,CAAC,IAAI,GAAG,GAAG,CAAA;IACjB,CAAC;IAEY,MAAM;;YACjB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAA;YAExC,QAAQ,KAAK,EAAE;gBACb,KAAK,CAAC,SAAS,CAAC;oBACd,OAAO,SAAS,CAAA;gBAClB,KAAK,CAAC,QAAQ,CAAC;oBACb,OAAO,QAAQ,CAAA;gBACjB,KAAK,CAAC,WAAW,CAAC;oBAChB,OAAO,WAAW,CAAA;gBACpB,KAAK,CAAC,QAAQ,CAAC;oBACb,OAAO,QAAQ,CAAA;gBACjB,KAAK,CAAC,SAAS,CAAC;oBACd,OAAO,SAAS,CAAA;gBAClB;oBACE,OAAO,QAAQ,CAAA;aAClB;QACH,CAAC;KAAA;IAEY,QAAQ,CAAE,MAAM;;YAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;QACnC,CAAC;KAAA;IAEY,MAAM;;YACjB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAA;QAC3B,CAAC;KAAA;CAEF;AA/CD,kBA+CC","file":"job.js","sourcesContent":["/**\n * houston/src/lib/queue/providers/redis/job.ts\n * Wraps `bull` package in types for use in our queue system.\n */\n\nimport * as BaseBull from 'bull'\nimport { EventEmitter } from 'events'\n\nimport * as type from '../../type'\n\nexport class Job extends EventEmitter implements type.IJob {\n\n  /**\n   * The bull instance we will be proxying to\n   *\n   * @var {Bull}\n   */\n  protected bull: BaseBull.Job\n\n  /**\n   * Creates a new queue with the given name\n   *\n   * @param {String} name\n   */\n  constructor (job: BaseBull.Job) {\n    super()\n\n    this.bull = job\n  }\n\n  public async status (): Promise<type.Status> {\n    const state = await this.bull.getState()\n\n    switch (state) {\n      case ('waiting'):\n        return 'waiting'\n      case ('active'):\n        return 'active'\n      case ('completed'):\n        return 'completed'\n      case ('failed'):\n        return 'failed'\n      case ('delayed'):\n        return 'delayed'\n      default:\n        return 'failed'\n    }\n  }\n\n  public async progress (amount) {\n    return this.bull.progress(amount)\n  }\n\n  public async remove () {\n    return this.bull.remove()\n  }\n\n}\n"]}