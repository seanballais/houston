{"version":3,"sources":["../src/lib/queue/providers/redis/queue.ts"],"names":[],"mappings":"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","file":"queue.js","sourcesContent":["/**\n * houston/src/lib/queue/providers/redis/queue.ts\n * Wraps `bull` package in types for use in our queue system.\n */\n\nimport * as BaseBull from 'bull'\nimport { inject, injectable } from 'inversify'\n\nimport { Config } from '../../../config'\nimport * as type from '../../type'\nimport { Job } from './job'\n\n@injectable()\nexport class Queue implements type.IQueue {\n  /**\n   * The bull instance we will be proxying to\n   *\n   * @var {Bull}\n   */\n  protected bull: BaseBull.Queue\n\n  /**\n   * Creates a new queue with the given name\n   *\n   * @param {String} name\n   */\n  constructor (@inject(Config) config: Config, name: string) {\n    const connection = config.get('queue.connection')\n\n    if (typeof config === 'object') {\n      this.bull = new BaseBull(name, { redis: connection })\n    } else {\n      this.bull = new BaseBull(name, config)\n    }\n  }\n\n  public async send (data, opts) {\n    const job = await this.bull.add(data, opts)\n\n    return new Job(job)\n  }\n\n  public async handle (fn) {\n    return this.bull.process(fn)\n  }\n\n  public async pause (local) {\n    return this.bull.pause(local)\n  }\n\n  public async resume (local) {\n    return this.bull.resume(local)\n  }\n\n  public async empty () {\n    return this.bull.empty()\n  }\n\n  public async close () {\n    return this.bull.close()\n  }\n\n  public async count (state = null) {\n    switch (state) {\n      case (null):\n        return this.bull.count()\n      case ('waiting'):\n        return this.bull.getWaitingCount()\n      case ('active'):\n        return this.bull.getActiveCount()\n      case ('completed'):\n        return this.bull.getCompletedCount()\n      case ('failed'):\n        return this.bull.getFailedCount()\n      case ('delayed'):\n        return this.bull.getDelayedCount()\n      default:\n        return 0\n    }\n  }\n\n  public async jobs (state: type.Status): Promise<Job[]> {\n    const bullJobs = await this.bullJobs(state)\n\n    return bullJobs.map((j) => new Job(j))\n  }\n\n  public onActive (fn) {\n    this.bull.on('active', fn)\n  }\n\n  public onProgress (fn) {\n    this.bull.on('progress', fn)\n  }\n\n  public onFailed (fn) {\n    this.bull.on('failed', fn)\n  }\n\n  public onCompleted (fn) {\n    this.bull.on('completed', fn)\n  }\n\n  protected async bullJobs (state: type.Status): Promise<BaseBull.Job[]> {\n    switch (state) {\n      case ('waiting'):\n        return this.bull.getWaiting()\n      case ('active'):\n        return this.bull.getActive()\n      case ('completed'):\n        return this.bull.getCompleted()\n      case ('failed'):\n        return this.bull.getFailed()\n      case ('delayed'):\n        return this.bull.getDelayed()\n      default:\n        return []\n    }\n  }\n}\n"]}