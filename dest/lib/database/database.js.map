{"version":3,"sources":["../src/lib/database/database.ts"],"names":[],"mappings":";AAAA;;;;;GAKG;;;;;;;;;;;;;;AAEH,yCAA8C;AAC9C,6BAA4B;AAC5B,6BAA4B;AAE5B,sCAAkC;AAClC,gCAA4B;AAE5B;;;;;GAKG;AAEH,IAAa,QAAQ,GAArB;IAOE;;;;;OAKG;IACH,YAA6B,MAAc,EAAe,GAAQ;QAChE,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAA;QAC1D,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAA;QAEhD,6DAA6D;QAC7D,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;YAC/D,UAAU,EAAE;gBACV,SAAS,EAAE,aAAa;gBACxB,SAAS,EAAE,YAAY;aACxB;YACD,KAAK,EAAE;gBACL,SAAS,EAAE,QAAQ;aACpB;YACD,gBAAgB,EAAE,KAAK;SACxB,CAAC,CAAA;QAEF,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;QAEd,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,CAAA;IACtC,CAAC;CAEF,CAAA;AAnCY,QAAQ;IADpB,sBAAU,EAAE;IAcG,WAAA,kBAAM,CAAC,eAAM,CAAC,CAAA,EAAkB,WAAA,kBAAM,CAAC,SAAG,CAAC,CAAA;qCAApB,eAAM,EAAoB,SAAG;GAbvD,QAAQ,CAmCpB;AAnCY,4BAAQ","file":"database.js","sourcesContent":["/**\n * houston/src/lib/database/database.ts\n * The main database class\n *\n * @exports {Class} Database - The master database connection class\n */\n\nimport { inject, injectable } from 'inversify'\nimport * as Knex from 'knex'\nimport * as path from 'path'\n\nimport { Config } from '../config'\nimport { Log } from '../log'\n\n/**\n * Database\n * The master database connection class\n *\n * @property {Knex} knex - A knex instance for queries\n */\n@injectable()\nexport class Database {\n\n  public knex: Knex\n\n  protected config: Config\n  protected log: Log\n\n  /**\n   * Creates a Database class\n   *\n   * @param {Config} config - Configuration for database connection\n   * @param {Log} [log] - The log instance to use for reporting\n   */\n  constructor (@inject(Config) config: Config, @inject(Log) log: Log) {\n    const migrationPath = path.resolve(__dirname, 'migration')\n    const seedPath = path.resolve(__dirname, 'seed')\n\n    // We assign some default file paths for migrations and seeds\n    const databaseConfig = Object.assign({}, config.get('database'), {\n      migrations: {\n        directory: migrationPath,\n        tableName: 'migrations'\n      },\n      seeds: {\n        directory: seedPath\n      },\n      useNullAsDefault: false\n    })\n\n    this.config = config\n    this.log = log\n\n    this.knex = new Knex(databaseConfig)\n  }\n\n}\n"]}