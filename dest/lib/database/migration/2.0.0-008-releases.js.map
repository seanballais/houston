{"version":3,"sources":["../src/lib/database/migration/2.0.0-008-releases.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAIH;;;;;;GAMG;AACH,YAAoB,IAAU;IAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,EAAE;QACnD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAA;QAE1B,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAA;QACrC,KAAK,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAA;QAChD,KAAK,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAA;QAChD,KAAK,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAA;QAChD,KAAK,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAA;QAE7C,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;QAE/C,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,WAAW,EAAE,CAAA;QAC1C,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,WAAW,EAAE,CAAA;QAE9C,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAA;QACtC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;QAEhE,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAA;QACpE,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAA;QACpE,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAA;IAC1C,CAAC,CAAC,CAAA;AACJ,CAAC;AAtBD,gBAsBC;AAED;;;;;;GAMG;AACH,cAAsB,IAAU;IAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;AAC1C,CAAC;AAFD,oBAEC","file":"2.0.0-008-releases.js","sourcesContent":["/**\n * houston/src/lib/database/migration/2.0.0-008-releases.ts\n * The inital houston 2.0.0 migration for releases table\n *\n * @exports {Function} up - Database information for upgrading to version 2.0.0\n * @exports {Function} down - Database information for downgrading version 2.0.0\n */\n\nimport * as Knex from 'knex'\n\n/**\n * up\n * Database information for upgrading to version 2.0.0\n *\n * @param {Object} knex - An initalized Knex package\n * @return {Promise} - A promise of database migration\n */\nexport function up (knex: Knex) {\n  return knex.schema.createTable('releases', (table) => {\n    table.uuid('id').primary()\n\n    table.string('version').notNullable()\n    table.integer('version_major', 12).notNullable()\n    table.integer('version_minor', 12).notNullable()\n    table.integer('version_patch', 12).notNullable()\n    table.integer('version_build', 12).nullable()\n\n    table.boolean('is_prerelease').defaultTo(false)\n\n    table.uuid('releaseable_id').notNullable()\n    table.string('releaseable_type').notNullable()\n\n    table.uuid('project_id').notNullable()\n    table.foreign('project_id').references('id').inTable('projects')\n\n    table.timestamp('created_at').notNullable().defaultTo(knex.fn.now())\n    table.timestamp('updated_at').notNullable().defaultTo(knex.fn.now())\n    table.timestamp('deleted_at').nullable()\n  })\n}\n\n/**\n * down\n * Database information for downgrading version 2.0.0\n *\n * @param {Object} knex - An initalized Knex package\n * @return {Promise} - A promise of successful database migration\n */\nexport function down (knex: Knex) {\n  return knex.schema.dropTable('releases')\n}\n"]}