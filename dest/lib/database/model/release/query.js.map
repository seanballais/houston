{"version":3,"sources":["../src/lib/database/model/release/query.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAEH,yCAAkD;AAElD,WAAmB,SAAQ,aAAS;IAElC;;;;;OAKG;IACI,eAAe,CAAE,IAAY;QAClC,OAAO,IAAI;aACR,MAAM,CAAC,YAAY,CAAC;aACpB,QAAQ,CAAC,UAAU,EAAE,aAAa,EAAE,qBAAqB,CAAC;aAC1D,KAAK,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAA;IACxC,CAAC;IAED;;;;;OAKG;IACI,YAAY,CAAE,OAAe;QAClC,OAAO,IAAI;aACR,MAAM,CAAC,YAAY,CAAC;aACpB,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAA;IAC9B,CAAC;IAED;;;;;OAKG;IACI,mBAAmB;QACxB,OAAO,IAAI;aACR,MAAM,CAAC,YAAY,CAAC;aACpB,QAAQ,CAAC,UAAU,EAAE,qBAAqB,EAAE,aAAa,CAAC;aAC1D,QAAQ,CAAC,QAAQ,EAAE,aAAa,EAAE,mBAAmB,CAAC;aACtD,KAAK,CAAC,qBAAqB,EAAE,IAAI,CAAC;aAClC,KAAK,CAAC,qBAAqB,EAAE,IAAI,CAAC;aAClC,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAAC;aAChC,KAAK,CAAC,eAAe,EAAE,SAAS,CAAC;aACjC,OAAO,CAAC,qBAAqB,EAAE,MAAM,CAAC;aACtC,OAAO,CAAC,aAAa,CAAC,CAAA;IAC3B,CAAC;CAEF;AA9CD,sBA8CC","file":"query.js","sourcesContent":["/**\n * houston/src/lib/database/model/project/query.ts\n * Sets up some cool methods and overwrites then function for casting to model\n */\n\nimport { Query as BaseQuery } from '../base/query'\n\nexport class Query extends BaseQuery {\n\n  /**\n   * Finds a release by the project name domain and release version\n   *\n   * @param {string} name - The domain name for the project\n   * @return {Query}\n   */\n  public whereNameDomain (name: string) {\n    return this\n      .select('releases.*')\n      .leftJoin('projects', 'projects.id', 'releases.project_id')\n      .where('projects.name_domain', name)\n  }\n\n  /**\n   * Finds a release by version\n   *\n   * @param {string} version - The version string that identifies the release\n   * @return {Query}\n   */\n  public whereVersion (version: string) {\n    return this\n      .select('releases.*')\n      .where('version', version)\n  }\n\n  /**\n   * Finds the newest projects, that have been released at one point or another.\n   * NOTE: this does not give projects with the latest releases. Phrasing.\n   *\n   * @return {Query}\n   */\n  public whereNewestReleased () {\n    return this\n      .select('releases.*')\n      .leftJoin('projects', 'releases.project_id', 'projects.id')\n      .leftJoin('builds', 'releases.id', 'builds.release_id')\n      .where('projects.deleted_at', null)\n      .where('releases.deleted_at', null)\n      .where('builds.deleted_at', null)\n      .where('builds.status', 'publish')\n      .orderBy('releases.created_at', 'desc')\n      .groupBy('projects.id')\n  }\n\n}\n"]}