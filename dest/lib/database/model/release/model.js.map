{"version":3,"sources":["../src/lib/database/model/release/model.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAGH,yCAAkD;AAClD,mCAA+B;AAE/B;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,WAAmB,SAAQ,aAAS;IAuBlC;;;;;;OAMG;IACI,MAAM,CAAC,KAAK,CAAE,QAAkB;QACrC,OAAO,IAAI,aAAK,CAAC,QAAQ,CAAC;aACvB,QAAQ,CAAC,KAAK,CAAC;aACf,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IACtB,CAAC;;AAhCD;;;;;GAKG;AACc,WAAK,GAAG,UAAU,CAAA;AARrC,sBAmCC","file":"model.js","sourcesContent":["/**\n * houston/src/lib/database/model/release/model.ts\n * All the information about a project release\n */\n\nimport { Database } from '../../database'\nimport { Model as BaseModel } from '../base/model'\nimport { Query } from './query'\n\n/**\n * Release\n * The main release model.\n *\n * @property {string} id - The record's ID\n *\n * @property {string} nameDomain - The reverse name schema for the project\n * @property {string} nameHuman - The human readable name for a project\n * @property {string} nameDeveloper - The name of the developer\n *\n * @property {string} type - The type of project\n *\n * @property {string} projectableId - The ID of the third party service\n * @property {string} projectableType - The name of the third party service\n *\n * @property {string} stripeId - The ID for the stripe record connected\n *\n * @property {Date} createdAt - The date the record was created at\n * @property {Date} updatedAt - The date the record was last updated\n * @property {Date} [deletedAt] - The date the record may have been deleted\n */\nexport class Model extends BaseModel {\n\n  /**\n   * table\n   * The table name for the current model\n   *\n   * @var {string}\n   */\n  protected static table = 'releases'\n\n  public version: string\n  public versionMajor: number\n  public versionMinor: number\n  public versionPatch: number\n  public versionBuild: number\n\n  public isPrerelease: boolean\n\n  public releaseableId: string\n  public releaseableType: string\n\n  public projectId: string\n\n  /**\n   * query\n   * This is a super master query function so we can put data in a model\n   *\n   * @param {Database} database - The database to query\n   * @return {Model|Model[]|null}\n   */\n  public static query (database: Database): Promise<Model|Model[]|null> {\n    return new Query(database)\n      .setModel(Model)\n      .from(Model.table)\n  }\n}\n"]}