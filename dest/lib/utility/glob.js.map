{"version":3,"sources":["../src/lib/utility/glob.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAEH,6BAA4B;AAE5B;;;;;;;;;GASG;AACH,cAAsB,OAAO,EAAE,OAAO,GAAG,EAAE;IACzC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YAClC,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,OAAO,MAAM,CAAC,GAAG,CAAC,CAAA;aACnB;iBAAM;gBACL,OAAO,OAAO,CAAC,GAAG,CAAC,CAAA;aACpB;QACH,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC;AAVD,oBAUC","file":"glob.js","sourcesContent":["/**\n * houston/src/lib/utility/glob.ts\n * Promiseifies the glob package function\n */\n\nimport * as Glob from 'glob'\n\n/**\n * A promise-ify passthrough function for glob\n *\n * @async\n *\n * @param {String} pattern\n * @param {Object} [options]\n *\n * @return {String[]}\n */\nexport function glob (pattern, options = {}): Promise<string[]> {\n  return new Promise((resolve, reject) => {\n    Glob(pattern, options, (err, res) => {\n      if (err != null) {\n        return reject(err)\n      } else {\n        return resolve(res)\n      }\n    })\n  })\n}\n"]}