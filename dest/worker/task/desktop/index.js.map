{"version":3,"sources":["../src/worker/task/desktop/index.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;;;AAEH,+BAA8B;AAC9B,6BAA4B;AAE5B,mCAA+B;AAC/B,gDAA4C;AAE5C,iCAAoC;AACpC,iCAAoC;AACpC,yCAA4C;AAE5C,aAAqB,SAAQ,yBAAW;IACtC;;;;OAIG;IACH,IAAW,KAAK;QACd,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE;YAChC,uCAAuC;YACvC,KAAK,YAAY;gBACf,OAAO;oBACL,kBAAW;oBACX,0BAAe;iBAChB,CAAA;YAEH;gBACE,OAAO;oBACL,kBAAW;oBACX,kBAAW;oBACX,0BAAe;iBAChB,CAAA;SACJ;IACH,CAAC;IAED;;;;OAIG;IACH,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,gCAAgC,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;IACjH,CAAC;IAED;;;;;OAKG;IACU,GAAG;;YACd,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACzC,IAAI,MAAM,KAAK,KAAK,EAAE;gBACpB,MAAM,IAAI,SAAG,CAAC,SAAG,CAAC,KAAK,CAAC,KAAK,EAAE,6BAA6B,CAAC,CAAA;aAC9D;YAED,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAA;YAErB,iEAAiE;YACjE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;YAE/C,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA;aACnB;QACH,CAAC;KAAA;CACF;AAtDD,0BAsDC","file":"index.js","sourcesContent":["/**\n * houston/src/worker/task/desktop/index.ts\n * Runs a bunch of tests around the desktop file\n */\n\nimport * as fs from 'fs-extra'\nimport * as path from 'path'\n\nimport { Log } from '../../log'\nimport { WrapperTask } from '../wrapperTask'\n\nimport { DesktopExec } from './exec'\nimport { DesktopIcon } from './icon'\nimport { DesktopValidate } from './validate'\n\nexport class Desktop extends WrapperTask {\n  /**\n   * All of the fun tests we should run on the desktop file\n   *\n   * @var {Task[]}\n   */\n  public get tasks () {\n    switch (this.worker.context.type) {\n      // System apps are allowed system icons\n      case 'system-app':\n        return [\n          DesktopExec,\n          DesktopValidate\n        ]\n\n      default:\n        return [\n          DesktopExec,\n          DesktopIcon,\n          DesktopValidate\n        ]\n    }\n  }\n\n  /**\n   * Path the desktop file should exist at\n   *\n   * @return {string}\n   */\n  public get path () {\n    return path.resolve(this.worker.workspace, 'package/usr/share/applications', this.worker.context.nameAppstream)\n  }\n\n  /**\n   * Runs all the desktop tests\n   *\n   * @async\n   * @return {void}\n   */\n  public async run () {\n    const exists = await fs.exists(this.path)\n    if (exists === false) {\n      throw new Log(Log.Level.ERROR, 'Desktop file does not exist')\n    }\n\n    await this.runTasks()\n\n    // TODO: Concat all errors that have no body to a single list log\n    this.logs.forEach((l) => this.worker.report(l))\n\n    if (this.errorLogs.length > 0) {\n      this.worker.stop()\n    }\n  }\n}\n"]}