{"version":3,"sources":["../src/worker/task/desktop/icon.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;;;AAEH,+BAA8B;AAC9B,2BAA0B;AAC1B,6BAA4B;AAE5B,mCAA+B;AAC/B,kCAA8B;AAE9B,iBAAyB,SAAQ,WAAI;IACnC;;;;OAIG;IACH,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,gCAAgC,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;IACjH,CAAC;IAED;;;;;OAKG;IACU,GAAG;;YACd,MAAM,GAAG,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;YAChD,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;YAE3B,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,IAAI,EAAE;gBACjC,MAAM,IAAI,SAAG,CAAC,SAAG,CAAC,KAAK,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAA;aAC3D;YAED,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE;gBACjE,MAAM,IAAI,SAAG,CAAC,SAAG,CAAC,KAAK,CAAC,KAAK,EAAE,sBAAsB,CAAC,CAAA;aACvD;QACH,CAAC;KAAA;CACF;AA5BD,kCA4BC","file":"icon.js","sourcesContent":["/**\n * houston/src/worker/task/appstream/icon.ts\n * Checks that a icon field is matches app name in the desktop file\n */\n\nimport * as fs from 'fs-extra'\nimport * as ini from 'ini'\nimport * as path from 'path'\n\nimport { Log } from '../../log'\nimport { Task } from '../task'\n\nexport class DesktopIcon extends Task {\n  /**\n   * Path the desktop file should exist at\n   *\n   * @return {string}\n   */\n  public get path () {\n    return path.resolve(this.worker.workspace, 'package/usr/share/applications', this.worker.context.nameAppstream)\n  }\n\n  /**\n   * Checks Icon field in desktop file\n   *\n   * @async\n   * @return {void}\n   */\n  public async run () {\n    const raw = await fs.readFile(this.path, 'utf8')\n    const data = ini.parse(raw)\n\n    if (data['Desktop Entry'] == null) {\n      throw new Log(Log.Level.ERROR, 'Missing application data')\n    }\n\n    if (data['Desktop Entry'].Icon !== this.worker.context.nameDomain) {\n      throw new Log(Log.Level.ERROR, 'Incorrect icon value')\n    }\n  }\n}\n"]}