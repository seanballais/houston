{"version":3,"sources":["../src/worker/task/appstream/id.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;;;AAEH,mCAAkC;AAClC,+BAA8B;AAC9B,6BAA4B;AAE5B,mCAA+B;AAC/B,kCAA8B;AAE9B,iBAAyB,SAAQ,WAAI;IAEnC;;;;OAIG;IACH,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,4BAA4B,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,cAAc,CAAC,CAAA;IAC3H,CAAC;IAED;;;;;OAKG;IACU,GAAG;;YACd,MAAM,GAAG,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACxC,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAA;YAE9C,MAAM,EAAE,GAAG,CAAC,CAAC,gBAAgB,CAAC,CAAA;YAE9B,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;gBACnB,CAAC,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,OAAO,CAAC,CAAA;gBACvE,MAAM,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;gBAEtC,MAAM,IAAI,SAAG,CAAC,SAAG,CAAC,KAAK,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAA;aACpD;iBAAM,IAAI,EAAE,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE;gBAC1D,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;gBAC1C,MAAM,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;gBAEtC,MAAM,IAAI,SAAG,CAAC,SAAG,CAAC,KAAK,CAAC,IAAI,EAAE,yBAAyB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,CAAA;aAC7F;QACH,CAAC;KAAA;CACF;AAnCD,kCAmCC","file":"id.js","sourcesContent":["/**\n * houston/src/worker/task/appstream/id.ts\n * Tests the appstream ID matches correctly\n */\n\nimport * as cheerio from 'cheerio'\nimport * as fs from 'fs-extra'\nimport * as path from 'path'\n\nimport { Log } from '../../log'\nimport { Task } from '../task'\n\nexport class AppstreamId extends Task {\n\n  /**\n   * Path the appstream file should exist at\n   *\n   * @return {string}\n   */\n  public get path () {\n    return path.resolve(this.worker.workspace, 'package/usr/share/metainfo', `${this.worker.context.nameDomain}.appdata.xml`)\n  }\n\n  /**\n   * Runs all the appstream tests\n   *\n   * @async\n   * @return {void}\n   */\n  public async run () {\n    const raw = await fs.readFile(this.path)\n    const $ = cheerio.load(raw, { xmlMode: true })\n\n    const id = $('component > id')\n\n    if (id.length === 0) {\n      $('component').prepend(`<id>${this.worker.context.nameAppstream}</id>`)\n      await fs.writeFile(this.path, $.xml())\n\n      throw new Log(Log.Level.WARN, 'Missing \"id\" field')\n    } else if (id.text() !== this.worker.context.nameAppstream) {\n      id.text(this.worker.context.nameAppstream)\n      await fs.writeFile(this.path, $.xml())\n\n      throw new Log(Log.Level.WARN, `\"id\" field should be \"${this.worker.context.nameAppstream}\"`)\n    }\n  }\n}\n"]}