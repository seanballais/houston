{"version":3,"sources":["../src/cli/commands/repo.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;;;AAEH,gEAAgE;AAChE,4BAA4B;AAE5B,0CAAgD;AAChD,4CAAoC;AAEvB,QAAA,OAAO,GAAG,MAAM,CAAA;AAChB,QAAA,QAAQ,GAAG,sCAAsC,CAAA;AAEjD,QAAA,OAAO,GAAG,CAAC,KAAK,EAAE,EAAE;IAC7B,OAAO,KAAK;SACT,MAAM,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,+BAA+B,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAA;AAC5G,CAAC,CAAA;AAED,iBAA+B,IAAI;;QACjC,MAAM,EAAE,GAAG,EAAE,GAAG,iBAAK,CAAC,IAAI,CAAC,CAAA;QAC3B,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAS,WAAM,CAAC,CAAA;QAEtC,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAChC,CAAC;CAAA;AALD,0BAKC","file":"repo.js","sourcesContent":["/**\n * houston/src/cli/commands/repo.ts\n * Runs the repository syslogd server\n */\n\n// Command line files are allowed to have console log statements\n// tslint:disable no-console\n\nimport { Repo as Server } from '../../repo/repo'\nimport { setup } from '../utilities'\n\nexport const command = 'repo'\nexport const describe = 'Starts the repository syslogd server'\n\nexport const builder = (yargs) => {\n    return yargs\n      .option('port', { alias: 'p', describe: 'The port to run the server on', type: 'number', default: 0 })\n}\n\nexport async function handler (argv) {\n  const { app } = setup(argv)\n  const server = app.get<Server>(Server)\n\n  await server.listen(argv.port)\n}\n"]}